# Lots of aliases from http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/ - with more I haven't looked at / tried
# Also see his .gitconfig - https://github.com/durdn/cfg/blob/master/.gitconfig
[user]
	name = Brooke Smith
	email = brooke@oehmsmith.com
[core]
	editor = /usr/bin/vim
	pager = less -Xr
[http]
#	proxy = http://localhost:3128
[https]
#	proxy = http://localhost:3128
[alias]
	# Print aliases - http://stackoverflow.com/questions/7066325/how-to-list-show-git-aliases
	# I didn't get the colour version working
	####	= Print aliases
	la	=	"!grep '\t=' ~/.gitconfig | less"
	#la	=	"!grep '\t=' ~/.gitconfig | sed -e 's/=/^[[0;31m=^[[0m/g' | sed -e 's/#.*/^[[0;32m&^[[0m/g' | less -R"
#	la	=	"!grep '\t=' ~/.gitconfig | sed -e 's/=/$(tput setaf 5)=$(tput sgr0)/g' | sed -e 's/#.*/^[[0;32m&^[[0m/g' | less -R"
	# Log commands (these first 3 don't work as they used to now for some reason, but have the others from durdn
	####	= Log aliases
	lg1	=	log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2	=	log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''          %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	lg	=	!"git lg1"
	ls	=	log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	ll	=	log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	lds	=	log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	ld	=	log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	le	=	log --oneline --decorate
	filelog	=	log -u
	fl	=	log -u
	####	= Show modified files in last commit:
	dl	=	"!git ll -1"
	####	= Show a diff last commit:
	dlc	=	diff --cached HEAD^
	####	= Find a file path in codebase - eg: 
	#	= $ git f trenches
	# source/drafts/2012-11-12-more-curated-git-tips-from-the-trenches.html.md
	f	=	"!git ls-files | grep -i"
	####	= Search/grep your entire codebase for a string: - eg:
	# 	= $ git gr trenches
	# source/drafts/2012-11-12-more-curated-git-tips-from-the-trenches.html.md:title: "More Curated Git Tips From The Trench
	# source/drafts/2012-11-12-more-curated-git-tips-from-the-trenches.html.md:## More Curated Git Tips From The Trenches
	# source/drafts/2012-11-17-must-have-git-aliases-advanced-examples.html.md:    $ git f trenches
	# source/drafts/2012-11-17-must-have-git-aliases-advanced-examples.html.md:    source/drafts/2012-11-12-more-curated-git
	grep	=	grep -Ii
	gr	=	grep -Ii

	st	=	status
	ci	=	commit
    	co	=	checkout
    	br	=	branch
    	unstage	=	reset HEAD --
    	last	=	log -1 HEAD
    	oldest-ancestor = !zsh -c 'diff -u <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | sed -ne \"s/^ //p\" | head -1' -

[color]  
    	diff = auto  
    	status = auto  
    	branch = auto 

[push]
	default = simple
[gui]
	fontdiff = -family Menlo -size 12 -weight normal -slant roman -underline 0 -overstrike 0
[pull]
	ff = only
